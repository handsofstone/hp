/*
Deployment script for nlpool

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "nlpool"
:setvar DefaultFilePrefix "nlpool"
:setvar DefaultDataPath "C:\Data\Dev\"
:setvar DefaultLogPath "C:\Data\Dev\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Dropping [nlpool].[FK_nlpool.RosterPlayer_dbo.NHL_PLAYER_PlayerId]...';


GO
ALTER TABLE [nlpool].[RosterPlayer] DROP CONSTRAINT [FK_nlpool.RosterPlayer_dbo.NHL_PLAYER_PlayerId];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [nlpool].[FK_nlpool.RosterPlayer_nlpool.Team_TeamId]...';


GO
ALTER TABLE [nlpool].[RosterPlayer] DROP CONSTRAINT [FK_nlpool.RosterPlayer_nlpool.Team_TeamId];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Starting rebuilding table [nlpool].[RosterPlayer]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [nlpool].[tmp_ms_xx_RosterPlayer] (
    [TeamId]   INT          NOT NULL,
    [PlayerId] INT          NOT NULL,
    [Position] VARCHAR (50) NULL,
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_nlpool.RosterPlayer1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [nlpool].[RosterPlayer])
    BEGIN
        INSERT INTO [nlpool].[tmp_ms_xx_RosterPlayer] ([TeamId], [PlayerId], [Position])
        SELECT [TeamId],
               [PlayerId],
               [Position]
        FROM   [nlpool].[RosterPlayer];
    END

DROP TABLE [nlpool].[RosterPlayer];

EXECUTE sp_rename N'[nlpool].[tmp_ms_xx_RosterPlayer]', N'RosterPlayer';

EXECUTE sp_rename N'[nlpool].[tmp_ms_xx_constraint_PK_nlpool.RosterPlayer1]', N'PK_nlpool.RosterPlayer', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [nlpool].[RosterPlayer].[IX_PlayerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PlayerId]
    ON [nlpool].[RosterPlayer]([PlayerId] ASC);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [nlpool].[RosterPlayer].[IX_TeamId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TeamId]
    ON [nlpool].[RosterPlayer]([TeamId] ASC);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [nlpool].[FK_nlpool.RosterPlayer_dbo.NHL_PLAYER_PlayerId]...';


GO
ALTER TABLE [nlpool].[RosterPlayer] WITH NOCHECK
    ADD CONSTRAINT [FK_nlpool.RosterPlayer_dbo.NHL_PLAYER_PlayerId] FOREIGN KEY ([PlayerId]) REFERENCES [dbo].[NHL_PLAYER] ([ID]) ON DELETE CASCADE;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [nlpool].[FK_nlpool.RosterPlayer_nlpool.Team_TeamId]...';


GO
ALTER TABLE [nlpool].[RosterPlayer] WITH NOCHECK
    ADD CONSTRAINT [FK_nlpool.RosterPlayer_nlpool.Team_TeamId] FOREIGN KEY ([TeamId]) REFERENCES [nlpool].[Team] ([Id]) ON DELETE CASCADE;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [nlpool].[RosterPlayer] WITH CHECK CHECK CONSTRAINT [FK_nlpool.RosterPlayer_dbo.NHL_PLAYER_PlayerId];

ALTER TABLE [nlpool].[RosterPlayer] WITH CHECK CHECK CONSTRAINT [FK_nlpool.RosterPlayer_nlpool.Team_TeamId];


GO
PRINT N'Update complete.';


GO
